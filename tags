!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
MattDaemon	src/MattDaemon.jl	/^module MattDaemon$/;"	f
P::Preload	src/MattDaemon.jl	/^(P::Preload)() = (P.f)(P.args...)$/;"	f
Preload	src/MattDaemon.jl	/^struct Preload$/;"	f
ServerPayload	src/MattDaemon.jl	/^struct ServerPayload$/;"	f
SystemSnoop.measure	src/MattDaemon.jl	/^SystemSnoop.measure(monitor::CounterTools.CoreMonitor) = read(monitor)$/;"	f
SystemSnoop.measure	src/MattDaemon.jl	/^SystemSnoop.measure(monitor::CounterTools.IMCMonitor) = read(monitor)$/;"	f
materialize	src/MattDaemon.jl	/^function materialize(x::NamedTuple{names}) where {names}$/;"	f
materialize	src/MattDaemon.jl	/^materialize(x) = x$/;"	f
materialize	src/MattDaemon.jl	/^materialize(x::Preload) = (x.f)(x.args...)$/;"	f
measurements	src/MattDaemon.jl	/^macro measurements(ex)$/;"	f
runserver	src/MattDaemon.jl	/^function runserver(port)$/;"	f
sample	src/MattDaemon.jl	/^function sample(sock, payload)$/;"	f
sample	src/MattDaemon.jl	/^sample(sock, ::Nothing) = nothing$/;"	f
